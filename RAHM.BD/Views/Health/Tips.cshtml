@{
<<<<<<< HEAD
    ViewData["Title"] = "Health Tips";
}

<section class="page-section">
    <h1 class="mb-4">🩺 Health Tips & Symptom Checker</h1>

    <div class="alert alert-info mb-4">
        <strong>💡 How to use:</strong>
        <ul class="mb-0">
            <li>Describe symptoms clearly (e.g., "headache", "chest pain", "skin rash")</li>
            <li>Use common medical terms for better results</li>
            <li>Results are based on FDA adverse event reports</li>
        </ul>
    </div>

    <!-- Search bar -->
    <div class="input-group mb-3">
        <input type="text" id="symptomInput" class="form-control" placeholder="Enter symptoms (e.g., headache, nausea, rash)" value="headache">
        <button class="btn btn-primary" id="checkBtn">
            <span id="btnText">Search FDA Database</span>
            <span id="btnSpinner" class="spinner-border spinner-border-sm" style="display: none;"></span>
        </button>
    </div>

    <!-- Quick examples -->
    <div class="mb-4">
        <small class="text-muted">Try: </small>
        <span class="badge bg-light text-dark me-1 cursor-pointer" onclick="setSymptom('headache')">headache</span>
        <span class="badge bg-light text-dark me-1 cursor-pointer" onclick="setSymptom('nausea')">nausea</span>
        <span class="badge bg-light text-dark me-1 cursor-pointer" onclick="setSymptom('rash')">rash</span>
        <span class="badge bg-light text-dark me-1 cursor-pointer" onclick="setSymptom('fever')">fever</span>
        <span class="badge bg-light text-dark me-1 cursor-pointer" onclick="setSymptom('chest pain')">chest pain</span>
    </div>

    <!-- Results -->
    <div id="results" class="mt-4" style="display: none;">
        <h4>📊 Conditions Associated with "<span id="searchedTerm"></span>"</h4>
        <div class="alert alert-warning">
            <small>⚠️ <strong>Important:</strong> This data comes from FDA adverse event reports and may not represent actual medical conditions. Always consult a healthcare professional for proper diagnosis.</small>
        </div>
        <div id="diagnosisList" class="list-group mt-3"></div>
    </div>

    <!-- Error message -->
    <div id="errorMessage" class="alert alert-danger mt-3" style="display: none;"></div>

    <!-- Data source info -->
    <div class="mt-4 alert alert-secondary">
        <small>🔍 <strong>Data Source:</strong> U.S. FDA Adverse Event Reporting System (FAERS). This tool searches reports of symptoms and associated conditions.</small>
    </div>

    <!-- General tips -->
    <div class="mt-5">
        <h4>💡 General Health Tips</h4>
        <ul class="list-group">
            <li class="list-group-item">✅ Always consult healthcare professionals for medical advice</li>
            <li class="list-group-item">✅ Maintain regular health check-ups</li>
            <li class="list-group-item">✅ Follow prescribed medications and treatments</li>
            <li class="list-group-item">✅ Report any adverse effects to your doctor</li>
        </ul>
    </div>
</section>

<style>
    .cursor-pointer {
        cursor: pointer;
    }

        .cursor-pointer:hover {
            background-color: #e9ecef !important;
        }
</style>

<script>
    function setSymptom(symptom) {
        document.getElementById('symptomInput').value = symptom;
        checkSymptoms();
    }

    async function checkSymptoms() {
        const symptoms = document.getElementById("symptomInput").value.trim();
        const list = document.getElementById("diagnosisList");
        const results = document.getElementById("results");
        const errorDiv = document.getElementById("errorMessage");
        const btnText = document.getElementById("btnText");
        const btnSpinner = document.getElementById("btnSpinner");
        const searchedTerm = document.getElementById("searchedTerm");

        // Reset UI
        results.style.display = "none";
        errorDiv.style.display = "none";
        list.innerHTML = "";
        btnText.style.display = "none";
        btnSpinner.style.display = "inline-block";

        if (!symptoms) {
            showError("Please enter symptoms to search.");
            resetButton();
            return;
        }

        searchedTerm.textContent = symptoms;

        try {
            const res = await fetch('/Health/SearchConditions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({ symptoms: symptoms })
            });

            const data = await res.json();

            if (!res.ok) {
                throw new Error(data.error || `Server error: ${res.status}`);
            }

            resetButton();

            if (!data.conditions || data.conditions.length === 0) {
                list.innerHTML = `
                    <div class="list-group-item text-center text-muted">
                        <p>🔍 No conditions found for "${symptoms}"</p>
                        <small>Try using different terms or more specific symptoms</small>
                    </div>`;
                results.style.display = "block";
                return;
            }

            // Display results
            data.conditions.forEach((item, index) => {
                const listItem = document.createElement("div");
                listItem.className = "list-group-item";
                listItem.innerHTML = `
                    <div class="d-flex align-items-start">
                        <span class="badge bg-primary me-2 mt-1">${index + 1}</span>
                        <div>
                            <strong class="condition-name">${item.name}</strong>
                            <br>
                            <small class="text-muted">Reported in FDA adverse event data</small>
                        </div>
                    </div>
                `;
                list.appendChild(listItem);
            });

            results.style.display = "block";

        } catch (err) {
            resetButton();
            console.error("Error:", err);
            showError("Unable to connect to FDA database. Please try again later.");
        }
    }

    function resetButton() {
        document.getElementById("btnText").style.display = "inline-block";
        document.getElementById("btnSpinner").style.display = "none";
    }

    function showError(message) {
        const errorDiv = document.getElementById("errorMessage");
        errorDiv.innerHTML = `<strong>⚠️ Error:</strong> ${message}`;
        errorDiv.style.display = "block";
    }

    // Event listeners
    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById("checkBtn").addEventListener("click", checkSymptoms);
        document.getElementById("symptomInput").addEventListener("keypress", function(e) {
            if (e.key === 'Enter') checkSymptoms();
        });

        // Auto-focus on input
        document.getElementById("symptomInput").focus();
    });
</script>
=======
    ViewData["Title"] = "Health Tips & Symptom Checker";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* All your existing CSS styles */
    .health-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }

    .section-card {
        background: white;
        border-radius: 10px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .section-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 1.5rem;
        border-radius: 10px;
        margin-bottom: 1rem;
        text-align: center;
    }

    .loading-message {
        text-align: center;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 8px;
        color: #6c757d;
        margin: 20px 0;
    }

    .input-group {
        margin-bottom: 1rem;
    }

    .symptom-input {
        width: 100%;
        padding: 12px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        font-size: 16px;
        margin-bottom: 10px;
    }

        .symptom-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

    .btn-primary {
        background: #667eea;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        color: white;
        cursor: pointer;
        font-size: 16px;
        transition: all 0.3s ease;
    }

        .btn-primary:hover {
            background: #5a6fd8;
            transform: translateY(-2px);
        }

        .btn-primary:disabled {
            background: #6c757d;
            cursor: not-allowed;
            transform: none;
        }

    .condition-result {
        background: #f8f9fa;
        border-left: 4px solid #28a745;
        padding: 15px;
        margin: 10px 0;
        border-radius: 5px;
    }

    .condition-name {
        font-weight: bold;
        color: #28a745;
        font-size: 18px;
        margin-bottom: 5px;
    }

    .condition-confidence {
        font-size: 12px;
        color: #6c757d;
        margin-bottom: 8px;
    }

    .condition-symptoms {
        font-size: 14px;
        color: #495057;
    }

    .related-symptoms {
        background: #e9ecef;
        padding: 10px;
        border-radius: 5px;
        margin-top: 10px;
        font-size: 14px;
    }

    .tips-list {
        list-style: none;
        padding: 0;
    }

        .tips-list li {
            background: #f8f9fa;
            padding: 12px;
            margin: 8px 0;
            border-radius: 5px;
            border-left: 4px solid #17a2b8;
        }

    .disclaimer {
        background: #fff3cd;
        border: 1px solid #ffeaa7;
        border-radius: 8px;
        padding: 15px;
        margin: 20px 0;
        font-size: 14px;
    }

    .symptom-tags {
        margin-top: 10px;
    }

    .symptom-tag {
        display: inline-block;
        background: #e9ecef;
        padding: 5px 10px;
        margin: 2px;
        border-radius: 15px;
        font-size: 12px;
        color: #495057;
    }
</style>

<div class="health-container">
    <!-- Page Header -->
    <div class="section-header">
        <h1><i class="fas fa-heartbeat"></i> Health Tips & Symptom Checker</h1>
        <p>Get health insights and check potential conditions based on symptoms</p>
    </div>

    <!-- Disclaimer -->
    <div class="disclaimer">
        <strong>⚠️ Medical Disclaimer:</strong> This tool provides general information only and should not replace professional medical advice. Always consult with a qualified healthcare provider for proper diagnosis and treatment.
    </div>

    <!-- Loading Message -->
    <div id="loadingMessage" class="loading-message">
        <i class="fas fa-spinner fa-spin"></i> Loading symptom database...
    </div>

    <!-- Symptom Checker Section -->
    <div class="section-card" id="symptomChecker" style="display: none;">
        <h3><i class="fas fa-stethoscope"></i> Symptom Checker</h3>
        <p>Enter your symptoms separated by commas (e.g., "fever, headache, cough")</p>

        <div class="input-group">
            <input type="text" id="symptomInput" class="symptom-input"
                   placeholder="Enter symptoms like: fever, headache, nausea, rash...">
            <button id="checkSymptomsBtn" class="btn-primary">
                <i class="fas fa-search"></i> Check Symptoms
            </button>
        </div>

        <div id="conditionResults"></div>
    </div>

    <!-- Health Tips Section -->
    <div class="section-card" id="healthTips" style="display: none;">
        <h3><i class="fas fa-lightbulb"></i> Get Health Tips</h3>
        <p>Enter a specific condition to get health tips</p>

        <div class="input-group">
            <input type="text" id="conditionInput" class="symptom-input"
                   placeholder="Enter a condition (e.g., Diabetes, Hypertension)">
            <button id="getTipsBtn" class="btn-primary">
                <i class="fas fa-tips"></i> Get Tips
            </button>
        </div>

        <ul id="tipsList" class="tips-list"></ul>
    </div>
</div>

<script>
    let symptomDatabase = {};
    let databaseLoaded = false;

    // Load JSON database
    async function loadSymptomDatabase() {
        try {
            const response = await fetch('/data/symptom-database.json');
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            symptomDatabase = await response.json();
            databaseLoaded = true;

            // Hide loading message and show the forms
            document.getElementById('loadingMessage').style.display = 'none';
            document.getElementById('symptomChecker').style.display = 'block';
            document.getElementById('healthTips').style.display = 'block';

            console.log('Symptom database loaded successfully');
        } catch (error) {
            console.error('Error loading symptom database:', error);
            document.getElementById('loadingMessage').innerHTML = `
                <i class="fas fa-exclamation-triangle" style="color: #dc3545;"></i>
                Failed to load symptom database. Please refresh the page to try again.
            `;
        }
    }

    // Symptom Checker functionality
    document.getElementById("checkSymptomsBtn").addEventListener("click", function() {
        if (!databaseLoaded) {
            alert("Symptom database is still loading. Please wait a moment and try again.");
            return;
        }

        const input = document.getElementById("symptomInput").value.trim().toLowerCase();
        if (!input) {
            alert("Please enter some symptoms");
            return;
        }

        const symptoms = input.split(',').map(s => s.trim());
        const results = analyzeSymptoms(symptoms);
        displayConditionResults(results);
    });

    function analyzeSymptoms(userSymptoms) {
        const potentialConditions = [];
        const processedConditions = new Set();

        userSymptoms.forEach(symptom => {
            const cleanSymptom = symptom.toLowerCase().trim();

            // Check for exact matches and partial matches
            Object.keys(symptomDatabase).forEach(dbSymptom => {
                if (cleanSymptom.includes(dbSymptom) || dbSymptom.includes(cleanSymptom)) {
                    symptomDatabase[dbSymptom].conditions.forEach(condition => {
                        const conditionKey = condition.name;
                        if (!processedConditions.has(conditionKey)) {
                            processedConditions.add(conditionKey);

                            // Calculate match score
                            const matchingSymptoms = condition.symptoms.filter(s =>
                                userSymptoms.some(us => us.toLowerCase().includes(s.toLowerCase()) ||
                                                       s.toLowerCase().includes(us.toLowerCase()))
                            );

                            const matchScore = (matchingSymptoms.length / condition.symptoms.length) * 100;

                            potentialConditions.push({
                                ...condition,
                                matchScore: Math.round(matchScore),
                                matchingSymptoms: matchingSymptoms
                            });
                        }
                    });
                }
            });
        });

        // Sort by match score and confidence
        return potentialConditions
            .sort((a, b) => (b.matchScore + b.confidence) - (a.matchScore + a.confidence))
            .slice(0, 5); // Top 5 results
    }

    function displayConditionResults(results) {
        const container = document.getElementById("conditionResults");

        if (results.length === 0) {
            container.innerHTML = `
                <div class="condition-result" style="border-left-color: #ffc107;">
                    <div class="condition-name" style="color: #ffc107;">No specific conditions found</div>
                    <p>The symptoms you entered don't match our database. Please consider:</p>
                    <ul>
                        <li>Consulting with a healthcare provider</li>
                        <li>Trying more specific symptom descriptions</li>
                        <li>Adding additional symptoms you may have</li>
                    </ul>
                </div>
            `;
            return;
        }

        let html = '<h4>Potential Conditions Based on Your Symptoms:</h4>';

        results.forEach((condition, index) => {
            const confidenceColor = condition.matchScore > 70 ? '#28a745' :
                                   condition.matchScore > 50 ? '#ffc107' : '#dc3545';

            html += `
                <div class="condition-result" style="border-left-color: ${confidenceColor};">
                    <div class="condition-name" style="color: ${confidenceColor};">
                        ${index + 1}. ${condition.name}
                    </div>
                    <div class="condition-confidence">
                        Match Score: ${condition.matchScore}% | Confidence: ${condition.confidence}%
                    </div>
                    <div class="condition-symptoms">
                        <strong>Common symptoms:</strong> ${condition.symptoms.join(', ')}
                    </div>
                    ${condition.matchingSymptoms.length > 0 ?
                        `<div class="symptom-tags">
                            <strong>Your matching symptoms:</strong>
                            ${condition.matchingSymptoms.map(s => `<span class="symptom-tag">${s}</span>`).join('')}
                        </div>` : ''
                    }
                    <div class="related-symptoms">
                        <strong>Other symptoms to watch for:</strong> ${condition.related.join(', ')}
                    </div>
                </div>
            `;
        });

        container.innerHTML = html;
    }

    // Health Tips functionality (existing)
    document.getElementById("getTipsBtn").addEventListener("click", async function() {
        const condition = document.getElementById("conditionInput").value.trim();
        if (!condition) return alert("Enter a condition");

        try {
            const res = await fetch('/Health/GetHealthTips', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ condition })
            });
            const data = await res.json();
            const list = document.getElementById("tipsList");
            list.innerHTML = "";
            data.tips.forEach(tip => {
                const li = document.createElement("li");
                li.textContent = tip;
                list.appendChild(li);
            });
        } catch (error) {
            console.error('Error fetching health tips:', error);
            alert('Error fetching health tips. Please try again.');
        }
    });

    // Load database when page loads
    document.addEventListener('DOMContentLoaded', function() {
        loadSymptomDatabase();
    });
</script>
>>>>>>> iloveass-clean
